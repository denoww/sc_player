@import "sistema/responsive_vars.scss";

.flex-row,
.flex-row-with-padding {
  display: flex;
  flex-wrap: wrap;

  &:not([class*='hidden-']) {
    display: flex !important;
  }

  > * {
    position: relative;
    &.align-center { justify-content: center; }
    &.align-left   { justify-content: flex-start; }
    &.align-right  { justify-content: flex-end; }
  }

  @mixin config-brkp($name) {
    @for $i from 1 through 30 {
      .fcol-#{$name}-#{$i}em {
        flex: 0 0 #{$i}em;
        max-width: #{$i}em;
      }
    }

    @for $i from 1 through 15 {
      .fcol-order-#{$name}-#{$i} { order: #{$i}; }
    }
    .fcol-order-#{$name}-none { order: 0; }

    @for $i from 1 through 100 {
      @if $i % 5 == 0 {
        .fcol-#{$name}-#{$i} {
          flex: 0 0 $i * 1%;
          max-width: $i * 1%;
        }
      }
    }

    .fcol-#{$name}-16 {
      flex: 0 0 16.666667%;
      max-width: 16.666667%
    }

    .fcol-#{$name}-33 {
      flex: 0 0 33.333333%;
      max-width: 33.333333%
    }

    .fcol-#{$name}-66 {
      flex: 0 0 66.666667%;
      max-width: 66.666667%
    }

    .fcol-#{$name}-auto {
      flex-grow: 1;
      flex-basis: 0;
      max-width: 100%;
      overflow: hidden;
    }
  }

  @each $brkp in $sc-breakpoints {
    $brkp-name: nth($brkp, 1);
    $brkp-value: nth($brkp, 2);

    @if $brkp-name == 'xs' {
      @include config-brkp($brkp-name);
    } @else {
      @media (min-width: #{$brkp-value}px) {
        @include config-brkp($brkp-name);
      }
    }
  }

  .clear {
    flex: 0 0 100%;
    max-width: 100%;
  }
}

.flex-row-with-padding {
  > *[class*='fcol-xs-'],
  > *[class*='fcol-sm-'],
  > *[class*='fcol-md-'],
  > *[class*='fcol-lg-'] {
    padding-left: 0.8em;
    padding-right: 0.8em;
    padding-bottom: 0.6em;
  }
}

.flex                          { display: flex !important }
.inline-flex                   { display: inline-flex !important }

.flex-wrap                     { flex-wrap: wrap }
.flex-nowrap                   { flex-wrap: nowrap }
.flex-wrap-reverse             { flex-wrap: wrap-reverse }

.flex-direction-row            { flex-direction: row }
.flex-direction-row-reverse    { flex-direction: row-reverse }
.flex-direction-column         { flex-direction: column }
.flex-direction-column-reverse { flex-direction: column-reverse }

.justify-content-flex-start    { justify-content: flex-start }
.justify-content-flex-end      { justify-content: flex-end }
.justify-content-center        { justify-content: center }
.justify-content-space-between { justify-content: space-between }
.justify-content-space-around  { justify-content: space-around }
.justify-content-space-evenly  { justify-content: space-evenly }

.align-items-flex-start        { align-items: flex-start }
.align-items-flex-end          { align-items: flex-end }
.align-items-center            { align-items: center }
.align-items-baseline          { align-items: baseline }
.align-items-stretch           { align-items: stretch }

.align-self-auto               { align-self: auto }
.align-self-flex-start         { align-self: flex-start }
.align-self-flex-end           { align-self: flex-end }
.align-self-center             { align-self: center }
.align-self-baseline           { align-self: baseline }
.align-self-stretch            { align-self: stretch }

.align-content-flex-start      { align-content: flex-start }
.align-content-flex-end        { align-content: flex-end }
.align-content-center          { align-content: center }
.align-content-space-between   { align-content: space-between }
.align-content-space-around    { align-content: space-around }
.align-content-stretch         { align-content: stretch }

@import "mixins/buttons";
@import "_sc-colors.scss";
@import "_sc-helpers.scss";
@import "sistema/responsive_vars.scss";

// colors

$sc-btn-border-color:  darken(sc-color("gray-light"), 8);
$sc-btn-dark-text:     sc-color("gray");
$sc-btn-light-text:    sc-color("white");

$sc-btn-default:       darken(sc-color("gray-lighter"), 2);
$sc-btn-gray:          sc-color("gray-dark");
$sc-btn-green:         sc-color("green");
$sc-btn-red:           sc-color("red");
$sc-btn-blue:          sc-color("blue");
$sc-btn-cian:          sc-color("cian");
$sc-btn-yellow:        sc-color("yellow");

$sc-btn-default-dark:  darken($sc-btn-default, 5);
$sc-btn-gray-dark:     darken($sc-btn-gray,    5);
$sc-btn-green-dark:    darken($sc-btn-green,   5);
$sc-btn-red-dark:      darken($sc-btn-red,     5);
$sc-btn-blue-dark:     darken($sc-btn-blue,    5);
$sc-btn-cian-dark:     darken($sc-btn-cian,    5);
$sc-btn-yellow-dark:   darken($sc-btn-yellow,  5);


// config
// $sc-btn-space-default: sc-space(lg);
$sc-btn-space-default: sc-space(sm) + .1em;

@mixin sc-btn-config-dark-bg{
  @include ripples-light;
  @include sc-text-shadow-dark;
}

// remove magic padding on firefox buttons
.sc-btn::-moz-focus-inner{
  padding: 0 !important;
  border: 0 none !important;
}

.sc-btn {
  position: relative;
  text-decoration: none !important;
  &:focus {
    outline: none;
    @include box-shadow(0 0 0 2px rgba(0,0,0,.5) inset);
  }
  &:hover{ text-decoration: none}
  // border: sc-border-size(md) solid $sc-btn-border-color;
  border: none;
  @include single-box-shadow(0, 0, 0, 1px, rgba(0,0,0,0.15), inset);
  // @include box-shadow(0 0 0 1px rgba(0, 0, 0, 0.15) inset);

  @include sc-border-radius;
  // overflow: hidden;

  display: inline-block;
  font-size: sc-text-size(md);
  font-family: 'Roboto', Arial, Verdana;
  text-align: center;
  vertical-align: middle;
  touch-action: manipulation;
  cursor: pointer;
  background-image: none; // Reset unusual Firefox-on-Android default style; see https://github.com/necolas/normalize.css/issues/214
  white-space: nowrap;
  // line-height: 1em;

  // padding: $sc-btn-space-default;
  min-height: 2.5em;
  line-height: 2.5em;
  padding: 0 0.8em;
  @include ripples-dark;
  @include gradient-button-variant($sc-btn-dark-text,  $sc-btn-border-color, $sc-btn-default, $sc-btn-default-dark);

  &.sc-btn-green, &.sc-btn-red, &.sc-btn-blue, &.sc-btn-cian, &.sc-btn-yellow, &.sc-btn-gray{
    @include sc-btn-config-dark-bg;
  }

  &.sc-btn-green         { @include gradient-button-variant($sc-btn-light-text, $sc-btn-border-color, $sc-btn-green,   $sc-btn-green-dark  );}
  &.sc-btn-red           { @include gradient-button-variant($sc-btn-light-text, $sc-btn-border-color, $sc-btn-red,     $sc-btn-red-dark    );}
  &.sc-btn-blue          { @include gradient-button-variant($sc-btn-light-text, $sc-btn-border-color, $sc-btn-blue,    $sc-btn-blue-dark   );}
  &.sc-btn-cian          { @include gradient-button-variant($sc-btn-light-text, $sc-btn-border-color, $sc-btn-cian,    $sc-btn-cian-dark   );}
  &.sc-btn-yellow        { @include gradient-button-variant($sc-btn-light-text, $sc-btn-border-color, $sc-btn-yellow,  $sc-btn-yellow-dark );}
  &.sc-btn-gray          { @include gradient-button-variant($sc-btn-light-text, $sc-btn-border-color, $sc-btn-gray,  $sc-btn-gray-dark ); }

  [class^="sc-icon-"], [class*=" sc-icon-"] {
    font-size: 1em;
    display: inline-block;
    // vertical-align: middle;
  }
  & span{
    text-align: center;
    display: inline-block;
    // vertical-align: middle;
  }

  &:active {   /* @include single-box-shadow(rgba(0,0,0,0), 0, 0, 0, 0); */ }

  &.sc-btn-block{
    display: block;
    width:100%;

    &.sc-btn-awesomeness > .sc-btn-text {
      text-align: left;
      width: 100%;
    }
  }

  &.sc-btn-clean{
    &, &:hover, &:active{
      text-shadow: none;
      margin: 0;
      border: none;
      border-radius: 0;
      box-shadow: none;
      background-color: transparent;
      background-image: none;
    }
  }

  &.sc-btn-awesomeness {
    @include ripples-dark;
    padding:0; //Reset the padding for applying it in child nodes

    //Those kids were fast as lightning
    overflow: hidden;

    // box-shadow: 1px 1px 4px rgba(104, 104, 104, 0.3);
    // border: sc-border-size(md) solid $sc-btn-border-color;
    border: none;
    border-color: $sc-btn-border-color;
    &, &:hover, &:active{
      background-color: rgba(0, 0, 0, 0) !important;
      background-image: none !important;
    }

    & > div{
      // padding: ($sc-btn-space-default + .05em);
      padding: 0 .7em;
      @include single-box-shadow(0, 0, 0, 1px, rgba(0,0,0,0.15), inset);
    }

    & > .sc-btn-icon{
      display: table-cell;
      vertical-align: middle;
      border-radius: .3em 0 0 .3em;
    }

    & > .sc-btn-text{
      display: table-cell;
      vertical-align: middle;
      border-radius: 0 .3em .3em 0;
    }

    @include awesomeness-button-variant($sc-btn-light-text, $sc-btn-border-color, $sc-btn-gray, $sc-btn-gray-dark);
    &.sc-btn-green   { @include awesomeness-button-variant($sc-btn-light-text, $sc-btn-border-color, $sc-btn-green,   $sc-btn-green-dark  ); }
    &.sc-btn-red     { @include awesomeness-button-variant($sc-btn-light-text, $sc-btn-border-color, $sc-btn-red,     $sc-btn-red-dark    ); }
    &.sc-btn-blue    { @include awesomeness-button-variant($sc-btn-light-text, $sc-btn-border-color, $sc-btn-blue,    $sc-btn-blue-dark   ); }
    &.sc-btn-cian    { @include awesomeness-button-variant($sc-btn-light-text, $sc-btn-border-color, $sc-btn-cian,    $sc-btn-cian-dark   ); }
    &.sc-btn-yellow  { @include awesomeness-button-variant($sc-btn-light-text, $sc-btn-border-color, $sc-btn-yellow,  $sc-btn-yellow-dark ); }
    &:disabled {
      cursor: not-allowed;
      text-shadow: none;
      @include awesomeness-button-variant($sc-btn-light-text, $sc-btn-border-color, sc-color("gray"), darken(sc-color("gray"), 5));
    }
    &:focus {
      .sc-btn-icon {
        @include box-shadow(2px 0 0 rgba(0, 0, 0, 0.5) inset, 0 2px 0 rgba(0, 0, 0, 0.5) inset, 0 -2px 0 rgba(0, 0, 0, 0.5) inset, -1px 0 0 rgba(0, 0, 0, 0.15) inset);
      }
      .sc-btn-text {
        @include box-shadow(-2px 0 0 rgba(0, 0, 0, 0.5) inset, 0 2px 0 rgba(0, 0, 0, 0.5) inset, 0 -2px 0 rgba(0, 0, 0, 0.5) inset, 1px 0 0 rgba(0, 0, 0, 0.15) inset);
      }
    }
  }
  &.sc-btn-thin{
    min-height: 1.8em;
    line-height: 1.8em;
  }
  &:disabled {
    cursor: not-allowed;
    text-shadow: none;
    @include gradient-button-variant($sc-btn-dark-text,  $sc-btn-border-color, $sc-btn-default, $sc-btn-default-dark);
  }
}

.sc-btn-group {
  position: relative;
  display: inline-block;
  vertical-align: middle; // match .sc-btn alignment given font-size hack above
  & > .sc-btn {
    position: relative;
    float: left;

    // @include single-box-shadow(0,0,0,0);

    &.sc-active {
      @include sc-btn-config-dark-bg;
      @include btn-group-active-variant($sc-btn-light-text, $sc-btn-border-color, $sc-btn-blue-dark,    $sc-btn-blue   );
      &.sc-active-gray     { @include btn-group-active-variant($sc-btn-light-text, $sc-btn-border-color, $sc-btn-gray-dark,    $sc-btn-gray   ); }
      &.sc-active-cian     { @include btn-group-active-variant($sc-btn-light-text, $sc-btn-border-color, $sc-btn-cian-dark,    $sc-btn-cian   ); }
      &.sc-active-green    { @include btn-group-active-variant($sc-btn-light-text, $sc-btn-border-color, $sc-btn-green-dark,   $sc-btn-green  ); }
      &.sc-active-red      { @include btn-group-active-variant($sc-btn-light-text, $sc-btn-border-color, $sc-btn-red-dark,     $sc-btn-red    ); }
      &.sc-active-yellow   { @include btn-group-active-variant($sc-btn-light-text, $sc-btn-border-color, $sc-btn-yellow-dark,  $sc-btn-yellow ); }
    }
  }

  // Prevent double borders when buttons are next to each other
  .sc-btn + .sc-btn,
  .sc-btn + .sc-btn-group,
  .sc-btn-group + .sc-btn,
  .sc-btn-group + .sc-btn-group {
    margin-left: -1px;
  }

  & > .sc-btn:not(:first-child):not(:last-child) {
    border-radius: 0;
  }

  // Set corners individual because sometimes a single button can be in a .btn-group and we need :first-child and :last-child to both match
  & > .sc-btn:first-child {
    margin-left: 0;
    &:not(:last-child) {
      @include border-right-radius(0);
    }
  }

  // Need .dropdown-toggle since :last-child doesn't apply given a .dropdown-menu immediately after it
  & > .sc-btn:last-child:not(:first-child) {
    @include border-left-radius(0);
  }

  // Custom edits for including btn-groups within btn-groups (useful for including dropdown buttons within a btn-group)
  & > .sc-btn-group {
    float: left;
  }

  & > .sc-btn-group:not(:first-child):not(:last-child) > .sc-btn {
    border-radius: 0;
  }

  & > .sc-btn-group:first-child {
    > .sc-btn:last-child {
      @include border-right-radius(0);
    }
  }

  & > .sc-btn-group:last-child > .sc-btn:first-child {
    @include border-left-radius(0);
  }
}

.sc-btn{
  &.sc-btn-sm-xs, &.sc-btn-md-xs, &.sc-btn-lg-xs,
  &.sc-btn-sm-sm, &.sc-btn-md-sm, &.sc-btn-lg-sm,
  &.sc-btn-sm-md, &.sc-btn-md-md, &.sc-btn-lg-md,
  &.sc-btn-sm-lg, &.sc-btn-md-lg, &.sc-btn-lg-lg{
    font-size: sc-text-size(sm);
  }

  &.sc-btn-xs, &.sc-btn-xs-xs{font-size: sc-text-size(xs);}
  &.sc-btn-sm, &.sc-btn-xs-sm{font-size: sc-text-size(sm);}
  &.sc-btn-md, &.sc-btn-xs-md{font-size: sc-text-size(md);}
  &.sc-btn-lg, &.sc-btn-xs-lg{font-size: sc-text-size(lg);}
}

.sc-btn:disabled {
  cursor: not-allowed;
  text-shadow: none;
  @include gradient-button-variant($sc-btn-dark-text,  $sc-btn-border-color, $sc-btn-default, $sc-btn-default-dark);
}

@media (max-width: #{$sm-device-width - 1}px) {
  .sc-btn{
    &.sc-btn-block-only-xs{
      display: block;
      width:100%;

      &.sc-btn-awesomeness > .sc-btn-text {
        text-align: left;
        width: 100%;
      }
    }
  }
}
@media (min-width: #{$sm-device-width}px) {
  .sc-btn{
    &.sc-btn-sm-xs{font-size: sc-text-size(xs);}
    &.sc-btn-sm-sm{font-size: sc-text-size(sm);}
    &.sc-btn-sm-md{font-size: sc-text-size(md);}
    &.sc-btn-sm-lg{font-size: sc-text-size(lg);}
  }
}
@media (min-width: #{$md-device-width}px) {
  .sc-btn{
    &.sc-btn-md-xs{font-size: sc-text-size(xs);}
    &.sc-btn-md-sm{font-size: sc-text-size(sm);}
    &.sc-btn-md-md{font-size: sc-text-size(md);}
    &.sc-btn-md-lg{font-size: sc-text-size(lg);}
  }
}
@media (min-width: #{$lg-device-width}px) {
  .sc-btn{
    &.sc-btn-lg-xs{font-size: sc-text-size(xs);}
    &.sc-btn-lg-sm{font-size: sc-text-size(sm);}
    &.sc-btn-lg-md{font-size: sc-text-size(md);}
    &.sc-btn-lg-lg{font-size: sc-text-size(lg);}
  }
}


